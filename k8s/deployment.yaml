# üïâÔ∏è Kubernetes Deployment - Divine Scale
apiVersion: apps/v1
kind: Deployment
metadata:
  name: abcsteps-vivek
  namespace: production
  labels:
    app: abcsteps-vivek
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: abcsteps-vivek
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: abcsteps-vivek
        version: v1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - abcsteps-vivek
              topologyKey: kubernetes.io/hostname
      containers:
      - name: app
        image: gcr.io/abcsteps/vivek:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: abcsteps-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: abcsteps-secrets
              key: redis-url
        - name: BETTER_AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: abcsteps-secrets
              key: auth-secret
        - name: OPENROUTER_API_KEY
          valueFrom:
            secretKeyRef:
              name: abcsteps-secrets
              key: openrouter-key
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: abcsteps-secrets
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: abcsteps-secrets
              key: google-client-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: abcsteps-uploads-pvc
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: abcsteps-vivek
  namespace: production
  labels:
    app: abcsteps-vivek
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: abcsteps-vivek
---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: abcsteps-vivek-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: abcsteps-vivek
  minReplicas: 3
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: abcsteps-vivek-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
spec:
  tls:
  - hosts:
    - abcsteps.app
    - www.abcsteps.app
    - api.abcsteps.app
    secretName: abcsteps-tls
  rules:
  - host: abcsteps.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: abcsteps-vivek
            port:
              number: 80
  - host: www.abcsteps.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: abcsteps-vivek
            port:
              number: 80
  - host: api.abcsteps.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: abcsteps-vivek
            port:
              number: 80
---
# PersistentVolumeClaim for uploads
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: abcsteps-uploads-pvc
  namespace: production
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd