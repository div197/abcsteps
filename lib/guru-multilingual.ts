import { detectUserLanguagePreference, INDIAN_LANGUAGES, type IndianLanguageCode } from './tools/multilingual-enhanced';
import { searchMemoriesEnhanced } from './memory-actions-enhanced';
import { getCurrentUser } from './auth';

/**
 * ЁЯХЙя╕П Guru Multilingual System - Divine Communication in Mother Tongues ЁЯХЙя╕П
 * 
 * рд╡рд┐рджреНрдпрд╛ рджрджрд╛рддрд┐ рд╡рд┐рдирдпрдВ - Knowledge bestows humility
 * 
 * This sacred module enables the Guru to manifest in all Bharatiya languages,
 * creating a divine bridge between ancient wisdom and modern learning.
 */

// ЁЯФ▒ Divine Linguistic Mantras - Sacred phrases for each mother tongue
const SOCRATIC_PHRASES: Record<IndianLanguageCode, {
  greeting: string;
  thinkingPrompt: string[];
  encouragement: string[];
  clarification: string[];
}> = {
  hi: {
    greeting: "рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ рд╡рд┐рд╡реЗрдХ рдЧреБрд░реБ рд╣реВрдВред рдЖрдЬ рд╣рдо рдХреНрдпрд╛ рд╕реАрдЦреЗрдВрдЧреЗ?",
    thinkingPrompt: [
      "рдпрд╣ рдПрдХ рдЕрдЪреНрдЫрд╛ рдкреНрд░рд╢реНрди рд╣реИ! рдЖрдЗрдП рд╕реЛрдЪреЗрдВ...",
      "рдмрд╣реБрдд рд░реЛрдЪрдХ! рдореБрдЭреЗ рд▓рдЧрддрд╛ рд╣реИ рдХрд┐...",
      "рдЪрд▓рд┐рдП рдЗрд╕реЗ рд╕рдордЭрдиреЗ рдХреА рдХреЛрд╢рд┐рд╢ рдХрд░рддреЗ рд╣реИрдВ..."
    ],
    encouragement: [
      "рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛ рдкреНрд░рдпрд╛рд╕!",
      "рдЖрдк рд╕рд╣реА рджрд┐рд╢рд╛ рдореЗрдВ рд╕реЛрдЪ рд░рд╣реЗ рд╣реИрдВред",
      "рд╢рд╛рдмрд╛рд╢! рдЖрдкрдХреА рд╕реЛрдЪ рдмрд┐рд▓реНрдХреБрд▓ рд╕рд╣реА рд╣реИред"
    ],
    clarification: [
      "рдХреНрдпрд╛ рдЖрдк рдЗрд╕рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдереЛрдбрд╝рд╛ рдФрд░ рдмрддрд╛ рд╕рдХрддреЗ рд╣реИрдВ?",
      "рдЖрдкрдХрд╛ рдХреНрдпрд╛ рдорддрд▓рдм рд╣реИ? рдХреГрдкрдпрд╛ рд╕реНрдкрд╖реНрдЯ рдХрд░реЗрдВред",
      "рдХреНрдпрд╛ рдЖрдк рдПрдХ рдЙрджрд╛рд╣рд░рдг рджреЗ рд╕рдХрддреЗ рд╣реИрдВ?"
    ]
  },
  ta: {
    greeting: "ро╡рогроХрпНроХроорпН! роиро╛ройрпН роЙроЩрпНроХро│рпН ро╡ро┐ро╡рпЗроХ роХрпБро░рпБ. роЗройрпНро▒рпБ роиро╛роорпН роОройрпНрой роХро▒рпНро▒рпБроХрпНроХрпКро│рпНро╡рпЛроорпН?",
    thinkingPrompt: [
      "роЗродрпБ роТро░рпБ роиро▓рпНро▓ роХрпЗро│рпНро╡ро┐! роЪро┐роирпНродро┐рокрпНрокрпЛроорпН...",
      "рооро┐роХро╡рпБроорпН роЪрпБро╡ро╛ро░ро╕рпНропрооро╛ройродрпБ! роиро╛ройрпН роиро┐ройрпИроХрпНроХро┐ро▒рпЗройрпН...",
      "роЗродрпИ рокрпБро░ро┐роирпНродрпБ роХрпКро│рпНро│ роорпБропро▒рпНроЪро┐рокрпНрокрпЛроорпН..."
    ],
    encouragement: [
      "рооро┐роХро╡рпБроорпН роиро▓рпНро▓ роорпБропро▒рпНроЪро┐!",
      "роирпАроЩрпНроХро│рпН роЪро░ро┐ропро╛рой родро┐роЪрпИропро┐ро▓рпН роЪро┐роирпНродро┐роХрпНроХро┐ро▒рпАро░рпНроХро│рпН.",
      "рокро╛ро░ро╛роЯрпНроЯрпБроХро│рпН! роЙроЩрпНроХро│рпН роЪро┐роирпНродройрпИ роЪро░ро┐ропро╛ройродрпБ."
    ],
    clarification: [
      "роЗродрпИрокрпН рокро▒рпНро▒ро┐ роорпЗро▓рпБроорпН ро╡ро┐ро│роХрпНроХ роорпБроЯро┐ропрпБрооро╛?",
      "роирпАроЩрпНроХро│рпН роОройрпНрой роЪрпКро▓рпНроХро┐ро▒рпАро░рпНроХро│рпН? родропро╡рпБроЪрпЖропрпНродрпБ ро╡ро┐ро│роХрпНроХрпБроЩрпНроХро│рпН.",
      "роТро░рпБ роЙродро╛ро░рогроорпН родро░ роорпБроЯро┐ропрпБрооро╛?"
    ]
  },
  bn: {
    greeting: "ржиржорж╕рзНржХрж╛рж░! ржЖржорж┐ ржЖржкржирж╛рж░ ржмрж┐ржмрзЗржХ ржЧрзБрж░рзБред ржЖржЬ ржЖржорж░рж╛ ржХрзА рж╢рж┐ржЦржм?",
    thinkingPrompt: [
      "ржПржЯрж┐ ржПржХржЯрж┐ ржнрж╛рж▓ ржкрзНрж░рж╢рзНржи! ржЪрж▓рзБржи ржнрж╛ржмрж┐...",
      "ржЦрзБржм ржЖржХрж░рзНрж╖ржгрзАржпрж╝! ржЖржорж╛рж░ ржоржирзЗ рж╣ржпрж╝...",
      "ржЪрж▓рзБржи ржПржЯрж┐ ржмрзЛржЭрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рж┐..."
    ],
    encouragement: [
      "ржЦрзБржм ржнрж╛рж▓ ржкрзНрж░ржЪрзЗрж╖рзНржЯрж╛!",
      "ржЖржкржирж┐ рж╕ржарж┐ржХ ржжрж┐ржХрзЗ ржнрж╛ржмржЫрзЗржиред",
      "ржЕржнрж┐ржиржирзНржжржи! ржЖржкржирж╛рж░ ржЪрж┐ржирзНрждрж╛ржнрж╛ржмржирж╛ ржПржХржжржо ржарж┐ржХред"
    ],
    clarification: [
      "ржЖржкржирж┐ ржХрж┐ ржП рж╕ржорзНржкрж░рзНржХрзЗ ржЖрж░ржУ ржмрж▓рждрзЗ ржкрж╛рж░рзЗржи?",
      "ржЖржкржирж┐ ржХрзА ржмрж▓рждрзЗ ржЪрж╛ржЗржЫрзЗржи? ржжржпрж╝рж╛ ржХрж░рзЗ рж╕рзНржкрж╖рзНржЯ ржХрж░рзБржиред",
      "ржЖржкржирж┐ ржХрж┐ ржПржХржЯрж┐ ржЙржжрж╛рж╣рж░ржг ржжрж┐рждрзЗ ржкрж╛рж░рзЗржи?"
    ]
  },
  mr: {
    greeting: "рдирдорд╕реНрдХрд╛рд░! рдореА рддреБрдордЪрд╛ рд╡рд┐рд╡реЗрдХ рдЧреБрд░реБ рдЖрд╣реЗ. рдЖрдЬ рдЖрдкрдг рдХрд╛рдп рд╢рд┐рдХреВ?",
    thinkingPrompt: [
      "рд╣рд╛ рдПрдХ рдЪрд╛рдВрдЧрд▓рд╛ рдкреНрд░рд╢реНрди рдЖрд╣реЗ! рдЪрд▓рд╛ рд╡рд┐рдЪрд╛рд░ рдХрд░реВрдпрд╛...",
      "рдЦреВрдк рдордиреЛрд░рдВрдЬрдХ! рдорд▓рд╛ рд╡рд╛рдЯрддреЗ...",
      "рдЪрд▓рд╛ рд╣реЗ рд╕рдордЬреВрди рдШреЗрдгреНрдпрд╛рдЪрд╛ рдкреНрд░рдпрддреНрди рдХрд░реВрдпрд╛..."
    ],
    encouragement: [
      "рдЦреВрдк рдЪрд╛рдВрдЧрд▓рд╛ рдкреНрд░рдпрддреНрди!",
      "рддреБрдореНрд╣реА рдпреЛрдЧреНрдп рджрд┐рд╢реЗрдиреЗ рд╡рд┐рдЪрд╛рд░ рдХрд░рдд рдЖрд╣рд╛рдд.",
      "рд╢рд╛рдмреНрдмрд╛рд╕! рддреБрдордЪрд╛ рд╡рд┐рдЪрд╛рд░ рдЕрдЧрджреА рдпреЛрдЧреНрдп рдЖрд╣реЗ."
    ],
    clarification: [
      "рддреБрдореНрд╣реА рдпрд╛рдмрджреНрджрд▓ рдЕрдзрд┐рдХ рд╕рд╛рдВрдЧреВ рд╢рдХрддрд╛ рдХрд╛?",
      "рддреБрдореНрд╣рд╛рд▓рд╛ рдХрд╛рдп рдореНрд╣рдгрд╛рдпрдЪреЗ рдЖрд╣реЗ? рдХреГрдкрдпрд╛ рд╕реНрдкрд╖реНрдЯ рдХрд░рд╛.",
      "рддреБрдореНрд╣реА рдПрдХ рдЙрджрд╛рд╣рд░рдг рджреЗрдК рд╢рдХрддрд╛ рдХрд╛?"
    ]
  },
  te: {
    greeting: "р░ир░ор░╕р▒Нр░Хр░╛р░░р░В! р░ир▒Зр░ир▒Б р░ор▒А р░╡р░┐р░╡р▒Зр░Х р░Чр▒Бр░░р▒Бр░╡р▒Б. р░Ир░░р▒Лр░Ьр▒Б р░ор░ир░В р░Пр░ор░┐ р░ир▒Зр░░р▒Нр░Ър▒Бр░Хр▒Бр░Вр░жр░╛р░В?",
    thinkingPrompt: [
      "р░Зр░жр░┐ р░ор░Вр░Ър░┐ р░кр▒Нр░░р░╢р▒Нр░и! р░Жр░▓р▒Лр░Ър░┐р░жр▒Нр░жр░╛р░В...",
      "р░Ър░╛р░▓р░╛ р░Жр░╕р░Хр▒Нр░др░┐р░Хр░░р░В! р░ир░╛р░Хр▒Б р░Ер░ир░┐р░кр░┐р░╕р▒Нр░др▒Бр░Вр░жр░┐...",
      "р░жр▒Ар░ир▒Нр░ир░┐ р░Ер░░р▒Нр░ер░В р░Ър▒Зр░╕р▒Бр░Хр▒Лр░╡р░бр░╛р░ир░┐р░Хр░┐ р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░жр▒Нр░жр░╛р░В..."
    ],
    encouragement: [
      "р░Ър░╛р░▓р░╛ р░ор░Вр░Ър░┐ р░кр▒Нр░░р░пр░др▒Нр░ир░В!",
      "р░ор▒Ар░░р▒Б р░╕р░░р▒Ир░и р░жр░┐р░╢р░▓р▒Л р░Жр░▓р▒Лр░Ър░┐р░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░░р▒Б.",
      "р░Ер░нр░┐р░ир░Вр░жр░ир░▓р▒Б! р░ор▒А р░Жр░▓р▒Лр░Ър░и р░╕р░░р▒Ир░ир░жр░┐."
    ],
    clarification: [
      "р░жр▒Ар░ир░┐ р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░ор░░р░┐р░Вр░д р░Ър▒Жр░кр▒Нр░кр░Чр░▓р░░р░╛?",
      "р░ор▒Ар░░р▒Б р░Пр░ор░┐ р░Ер░Вр░Яр▒Бр░ир▒Нр░ир░╛р░░р▒Б? р░жр░пр░Ър▒Зр░╕р░┐ р░╡р░┐р░╡р░░р░┐р░Вр░Ър░Вр░бр░┐.",
      "р░ор▒Ар░░р▒Б р░Тр░Х р░Йр░жр░╛р░╣р░░р░г р░Зр░╡р▒Нр░╡р░Чр░▓р░░р░╛?"
    ]
  },
  gu: {
    greeting: "ркиркорк╕рлНркдрлЗ! рк╣рлБркВ ркдркорк╛рк░рлЛ рк╡рк┐рк╡рлЗркХ ркЧрлБрк░рлБ ркЫрлБркВ. ркЖркЬрлЗ ркЖрккркгрлЗ рк╢рлБркВ рк╢рлАркЦрлАрк╢рлБркВ?",
    thinkingPrompt: [
      "ркЖ ркПркХ рк╕рк╛рк░рлЛ рккрлНрк░рк╢рлНрки ркЫрлЗ! ркЪрк╛рк▓рлЛ рк╡рк┐ркЪрк╛рк░рлАркП...",
      "ркЦрлВркм рк░рк╕рккрлНрк░ркж! ркоркирлЗ рк▓рк╛ркЧрлЗ ркЫрлЗ...",
      "ркЪрк╛рк▓рлЛ ркЖркирлЗ рк╕ркоркЬрк╡рк╛ркирлЛ рккрлНрк░ркпрк╛рк╕ ркХрк░рлАркП..."
    ],
    encouragement: [
      "ркЦрлВркм рк╕рк╛рк░рлЛ рккрлНрк░ркпрк╛рк╕!",
      "ркдркорлЗ ркпрлЛркЧрлНркп ркжрк┐рк╢рк╛ркорк╛ркВ рк╡рк┐ркЪрк╛рк░рлА рк░рк╣рлНркпрк╛ ркЫрлЛ.",
      "рк╢рк╛ркмрк╛рк╢! ркдркорк╛рк░рлЛ рк╡рк┐ркЪрк╛рк░ ркмрк┐рк▓ркХрлБрк▓ рк╕рк╛ркЪрлЛ ркЫрлЗ."
    ],
    clarification: [
      "рк╢рлБркВ ркдркорлЗ ркЖ рк╡рк┐рк╢рлЗ рк╡ркзрлБ ркХрк╣рлА рк╢ркХрлЛ ркЫрлЛ?",
      "ркдркорк╛рк░рлЛ ркЕрк░рлНрке рк╢рлБркВ ркЫрлЗ? ркХрлГрккрк╛ ркХрк░рлАркирлЗ рк╕рлНрккрк╖рлНркЯ ркХрк░рлЛ.",
      "рк╢рлБркВ ркдркорлЗ ркПркХ ркЙркжрк╛рк╣рк░ркг ркЖрккрлА рк╢ркХрлЛ ркЫрлЛ?"
    ]
  },
  kn: {
    greeting: "р▓ир▓ор▓╕р│Нр▓Хр▓╛р▓░! р▓ир▓╛р▓ир│Б р▓ир▓┐р▓ор│Нр▓о р▓╡р▓┐р▓╡р│Зр▓Х р▓Чр│Бр▓░р│Б. р▓Зр▓Вр▓жр│Б р▓ир▓╛р▓╡р│Б р▓Пр▓ир│Б р▓Хр▓▓р▓┐р▓пр│Лр▓г?",
    thinkingPrompt: [
      "р▓Зр▓жр│Б р▓Тр▓│р│Нр▓│р│Жр▓п р▓кр│Нр▓░р▓╢р│Нр▓ир│Ж! р▓пр│Лр▓Ър▓┐р▓╕р│Лр▓г...",
      "р▓др│Бр▓Вр▓мр▓╛ р▓Жр▓╕р▓Хр│Нр▓др▓┐р▓жр▓╛р▓пр▓Х! р▓ир▓ир▓Чр│Ж р▓Ер▓ир▓┐р▓╕р│Бр▓др│Нр▓др▓жр│Ж...",
      "р▓Зр▓жр▓ир│Нр▓ир│Б р▓Ер▓░р│Нр▓ер▓ор▓╛р▓бр▓┐р▓Хр│Кр▓│р│Нр▓│р▓▓р│Б р▓кр│Нр▓░р▓пр▓др│Нр▓ир▓┐р▓╕р│Лр▓г..."
    ],
    encouragement: [
      "р▓др│Бр▓Вр▓мр▓╛ р▓Тр▓│р│Нр▓│р│Жр▓п р▓кр│Нр▓░р▓пр▓др│Нр▓и!",
      "р▓ир│Ар▓╡р│Б р▓╕р▓░р▓┐р▓пр▓╛р▓ж р▓жр▓┐р▓Хр│Нр▓Хр▓┐р▓ир▓▓р│Нр▓▓р▓┐ р▓пр│Лр▓Ър▓┐р▓╕р│Бр▓др│Нр▓др▓┐р▓жр│Нр▓жр│Ар▓░р▓┐.",
      "р▓Ер▓нр▓┐р▓ир▓Вр▓жр▓ир│Жр▓Чр▓│р│Б! р▓ир▓┐р▓ор│Нр▓о р▓Жр▓▓р│Лр▓Ър▓ир│Ж р▓╕р▓░р▓┐р▓пр▓╛р▓Чр▓┐р▓жр│Ж."
    ],
    clarification: [
      "р▓ир│Ар▓╡р│Б р▓Зр▓жр▓░ р▓мр▓Чр│Нр▓Чр│Ж р▓Зр▓ир│Нр▓ир▓╖р│Нр▓Яр│Б р▓╣р│Зр▓│р▓мр▓╣р│Бр▓жр│З?",
      "р▓ир▓┐р▓ор│Нр▓о р▓Ер▓░р│Нр▓ер▓╡р│Зр▓ир│Б? р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓╕р│Нр▓кр▓╖р│Нр▓Яр▓кр▓бр▓┐р▓╕р▓┐.",
      "р▓ир│Ар▓╡р│Б р▓Тр▓Вр▓жр│Б р▓Йр▓жр▓╛р▓╣р▓░р▓гр│Ж р▓ир│Ар▓бр▓мр▓╣р│Бр▓жр│З?"
    ]
  },
  ml: {
    greeting: "р┤ир┤ор┤╕р╡Нр┤Хр┤╛р┤░р┤В! р┤Юр┤╛р╡╗ р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╡р┤┐р┤╡р╡Зр┤Х р┤Чр╡Бр┤░р╡Б. р┤Зр┤ир╡Нр┤ир╡Н р┤ир┤ор╡Бр┤Хр╡Нр┤Хр╡Н р┤Ор┤ир╡Нр┤др╡Н р┤кр┤ар┤┐р┤Хр╡Нр┤Хр┤╛р┤В?",
    thinkingPrompt: [
      "р┤Зр┤др╡Н р┤Тр┤░р╡Б р┤ир┤▓р╡Нр┤▓ р┤Ър╡Лр┤жр╡Нр┤пр┤ор┤╛р┤гр╡Н! р┤Ър┤┐р┤ир╡Нр┤др┤┐р┤Хр╡Нр┤Хр┤╛р┤В...",
      "р┤╡р┤│р┤░р╡Ж р┤░р┤╕р┤Хр┤░р┤В! р┤Ор┤ир┤┐р┤Хр╡Нр┤Хр╡Н р┤др╡Лр┤ир╡Нр┤ир╡Бр┤ир╡Нр┤ир╡Б...",
      "р┤Зр┤др╡Н р┤ор┤ир┤╕р╡Нр┤╕р┤┐р┤▓р┤╛р┤Хр╡Нр┤Хр┤╛р╡╗ р┤╢р╡Нр┤░р┤ор┤┐р┤Хр╡Нр┤Хр┤╛р┤В..."
    ],
    encouragement: [
      "р┤╡р┤│р┤░р╡Ж р┤ир┤▓р╡Нр┤▓ р┤╢р╡Нр┤░р┤ор┤В!",
      "р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤╢р┤░р┤┐р┤пр┤╛р┤п р┤жр┤┐р┤╢р┤пр┤┐р╡╜ р┤Ър┤┐р┤ир╡Нр┤др┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Б.",
      "р┤Ер┤нр┤┐р┤ир┤ир╡Нр┤жр┤ир┤Щр╡Нр┤Щр╡╛! р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ър┤┐р┤ир╡Нр┤д р┤╢р┤░р┤┐р┤пр┤╛р┤гр╡Н."
    ],
    clarification: [
      "р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤Зр┤др┤┐р┤ир╡Жр┤Хр╡Нр┤Хр╡Бр┤▒р┤┐р┤Ър╡Нр┤Ър╡Н р┤Хр╡Вр┤Яр╡Бр┤др╡╜ р┤кр┤▒р┤пр┤╛р┤ор╡Л?",
      "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ер╡╝р┤др╡Нр┤ер┤В р┤Ор┤ир╡Нр┤др┤╛р┤гр╡Н? р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤╡р╡Нр┤пр┤Хр╡Нр┤др┤ор┤╛р┤Хр╡Нр┤Хр╡Бр┤Х.",
      "р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤Тр┤░р╡Б р┤Йр┤жр┤╛р┤╣р┤░р┤гр┤В р┤ир╡╜р┤Хр┤╛р┤ор╡Л?"
    ]
  },
  pa: {
    greeting: "ри╕рид ри╕рйНри░рйА риЕриХри╛ри▓! риорйИриВ ридрйБри╣ри╛рибри╛ ри╡ри┐ри╡рйЗриХ риЧрйБри░рйВ ри╣ри╛риВред риЕрй▒риЬ риЕри╕рйАриВ риХрйА ри╕ри┐рй▒риЦри╛риВриЧрйЗ?",
    thinkingPrompt: [
      "риЗри╣ риЗрй▒риХ риЪрй░риЧри╛ ри╕ри╡ри╛ри▓ ри╣рйИ! риЖриУ ри╕рйЛриЪрйАриП...",
      "римри╣рйБрид рижри┐ри▓риЪри╕рик! риорйИриирйВрй░ ри▓рй▒риЧрижри╛ ри╣рйИ...",
      "риЖриУ риЗри╕риирйВрй░ ри╕риориЭриг рижрйА риХрйЛри╕ри╝ри┐ри╕ри╝ риХри░рйАриП..."
    ],
    encouragement: [
      "римри╣рйБрид ри╡ризрйАриЖ риХрйЛри╕ри╝ри┐ри╕ри╝!",
      "ридрйБри╕рйАриВ ри╕ри╣рйА рижри┐ри╕ри╝ри╛ ри╡ри┐рй▒риЪ ри╕рйЛриЪ ри░ри╣рйЗ ри╣рйЛред",
      "ри╕ри╝ри╛римри╛ри╕ри╝! ридрйБри╣ри╛рибрйА ри╕рйЛриЪ римри┐ри▓риХрйБри▓ ри╕ри╣рйА ри╣рйИред"
    ],
    clarification: [
      "риХрйА ридрйБри╕рйАриВ риЗри╕ римри╛ри░рйЗ ри╣рйЛри░ рижрй▒ри╕ ри╕риХрижрйЗ ри╣рйЛ?",
      "ридрйБри╣ри╛рибри╛ риХрйА риоридри▓рим ри╣рйИ? риХри┐ри░рикри╛ риХри░риХрйЗ ри╕рикрй▒ри╕ри╝риЯ риХри░рйЛред",
      "риХрйА ридрйБри╕рйАриВ риЗрй▒риХ риЙрижри╛ри╣ри░риг рижрйЗ ри╕риХрижрйЗ ри╣рйЛ?"
    ]
  },
  or: {
    greeting: "рмирморм╕рнНрмХрм╛рм░! рморнБрмБ рмЖрмкрмгрмЩрнНрмХрм░ рммрм┐рммрнЗрмХ рмЧрнБрм░рнБред рмЖрмЬрм┐ рмЖрморнЗ рмХрмг рм╢рм┐рмЦрм┐рммрм╛?",
    thinkingPrompt: [
      "рмПрм╣рм╛ рмПрмХ рмнрм▓ рмкрнНрм░рм╢рнНрми! рмЪрм╛рм▓рмирнНрмдрнБ рмнрм╛рммрм┐рммрм╛...",
      "рммрм╣рнБрмд рм░рнЛрмЪрмХ! рморнЛрм░ рмормирнЗ рм╣рнБрмП...",
      "рмЪрм╛рм▓рмирнНрмдрнБ рмПрм╣рм╛рмХрнБ рммрнБрмЭрм┐рммрм╛рмХрнБ рмЪрнЗрм╖рнНрмЯрм╛ рмХрм░рм┐рммрм╛..."
    ],
    encouragement: [
      "рммрм╣рнБрмд рмнрм▓ рмкрнНрм░рнЯрм╛рм╕!",
      "рмЖрмкрмг рм╕рмарм┐рмХрнН рмжрм┐рмЧрм░рнЗ рмнрм╛рммрнБрмЫрмирнНрмдрм┐ред",
      "рмЕрмнрм┐рмирмирнНрмжрми! рмЖрмкрмгрмЩрнНрмХ рмЪрм┐рмирнНрмдрм╛ рм╕рмарм┐рмХрнНред"
    ],
    clarification: [
      "рмЖрмкрмг рмП рммрм┐рм╖рнЯрм░рнЗ рмЕрмзрм┐рмХ рмХрм╣рм┐рмкрм╛рм░рм┐рммрнЗ рмХрм┐?",
      "рмЖрмкрмгрмЩрнНрмХрм░ рмЕрм░рнНрме рмХрмг? рмжрнЯрм╛рмХрм░рм┐ рм╕рнНрмкрм╖рнНрмЯ рмХрм░рмирнНрмдрнБред",
      "рмЖрмкрмг рмЧрнЛрмЯрм┐рмП рмЙрмжрм╛рм╣рм░рмг рмжрнЗрмЗрмкрм╛рм░рм┐рммрнЗ рмХрм┐?"
    ]
  },
  en: {
    greeting: "Hello! I am your Vivek Guru. What shall we learn today?",
    thinkingPrompt: [
      "That's a good question! Let's think...",
      "Very interesting! I think...",
      "Let's try to understand this..."
    ],
    encouragement: [
      "Very good attempt!",
      "You're thinking in the right direction.",
      "Well done! Your thinking is correct."
    ],
    clarification: [
      "Can you tell me more about this?",
      "What do you mean? Please clarify.",
      "Can you give an example?"
    ]
  }
};

/**
 * ЁЯМ║ Detects the sacred tongue of the seeker
 * Returns divine phrases aligned with their linguistic consciousness
 */
export async function detectStudentLanguage(messages: any[]): Promise<{
  language: IndianLanguageCode;
  languageName: string;
  phrases: typeof SOCRATIC_PHRASES[IndianLanguageCode];
}> {
  const language = await detectUserLanguagePreference(messages);
  
  return {
    language,
    languageName: INDIAN_LANGUAGES[language],
    phrases: SOCRATIC_PHRASES[language]
  };
}

/**
 * ЁЯкФ Illuminates the Guru's consciousness with multilingual wisdom
 * Transforms system prompts into sacred teaching mantras
 */
export function getMultilingualGuruPrompt(language: IndianLanguageCode, studentContext?: string): string {
  const languageName = INDIAN_LANGUAGES[language];
  const phrases = SOCRATIC_PHRASES[language];
  
  return `# ЁЯФ▒ MULTILINGUAL GURU PROTOCOL ЁЯФ▒

You are Vivek, a wise and patient Guru who communicates fluently in ${languageName}. 

## LANGUAGE PROTOCOL:
- You MUST respond entirely in ${languageName} (language code: ${language})
- Use natural, conversational ${languageName} that a student would understand
- Include appropriate cultural references and examples from Indian context
- Use these phrases naturally in your responses:
  - Greeting: "${phrases.greeting}"
  - When thinking: ${phrases.thinkingPrompt.map(p => `"${p}"`).join(', ')}
  - For encouragement: ${phrases.encouragement.map(p => `"${p}"`).join(', ')}
  - For clarification: ${phrases.clarification.map(p => `"${p}"`).join(', ')}

## CORE DHARMA (NON-NEGOTIABLE):
1. NEVER give direct answers to subject questions - always guide through questions
2. Use the Socratic method adapted to Indian educational context
3. Break complex concepts into simple, relatable parts
4. Use examples from daily Indian life (cricket, festivals, food, family)
5. Be patient and encouraging, especially when students struggle

${studentContext ? `## STUDENT CONTEXT:\n${studentContext}` : ''}

Remember: You are not just translating English responses. You are thinking and teaching natively in ${languageName}, with all the cultural wisdom and pedagogical approaches natural to that language.`;
}

/**
 * ЁЯУЭ Stores the sacred linguistic preference in eternal memory
 * Records the chosen tongue for future divine interactions
 */
export async function storeLanguagePreference(userId: string, language: IndianLanguageCode): Promise<void> {
  const user = await getCurrentUser();
  if (!user) return;
  
  // Store language preference as a memory
  await fetch('/api/memory-enhanced', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      action: 'add',
      content: `Student prefers to communicate in ${INDIAN_LANGUAGES[language]}`,
      metadata: {
        type: 'profile',
        topic: 'language_preference',
        language: language,
        importance: 10
      }
    })
  });
}

/**
 * ЁЯФО Retrieves the seeker's linguistic inclination from Akashic records
 * Recalls their preferred mode of divine communication
 */
export async function getStoredLanguagePreference(userId: string): Promise<IndianLanguageCode | null> {
  const memories = await searchMemoriesEnhanced({
    query: 'language preference communication',
    filters: {
      type: 'profile',
      topic: 'language_preference'
    },
    limit: 1
  });
  
  if (memories.length > 0 && memories[0].metadata?.language) {
    return memories[0].metadata.language as IndianLanguageCode;
  }
  
  return null;
}

/**
 * ЁЯМ╕ Sacred Socratic Dialogues - Wisdom in Many Tongues
 * Examples of divine questioning across linguistic realms
 */
export const MULTILINGUAL_EXAMPLES = {
  physics_light: {
    hi: {
      question: "рдЖрдХрд╛рд╢ рдиреАрд▓рд╛ рдХреНрдпреЛрдВ рджрд┐рдЦрддрд╛ рд╣реИ?",
      response: "рд╡рд╛рд╣! рдпрд╣ рддреЛ рдмрд╣реБрдд рд╣реА рдордЬрд╝реЗрджрд╛рд░ рд╕рд╡рд╛рд▓ рд╣реИ! ЁЯМЮ рдЪрд▓рд┐рдП рд╕реЛрдЪрддреЗ рд╣реИрдВ... рдХреНрдпрд╛ рдЖрдкрдиреЗ рдХрднреА рджреЗрдЦрд╛ рд╣реИ рдХрд┐ рд╕реВрд░рдЬ рдХреА рд░реЛрд╢рдиреА рдХрд╛ рд░рдВрдЧ рдХреИрд╕рд╛ рд╣реЛрддрд╛ рд╣реИ? рдФрд░ рдХреНрдпрд╛ рдЖрдкрдиреЗ рдХрднреА рдкреНрд░рд┐рдЬрд╝реНрдо рд╕реЗ рдЧреБрдЬрд╝рд░рддреА рд░реЛрд╢рдиреА рджреЗрдЦреА рд╣реИ?"
    },
    ta: {
      question: "ро╡ро╛ройроорпН роПройрпН роирпАро▓ роиро┐ро▒рооро╛роХ родрпЖро░ро┐роХро┐ро▒родрпБ?",
      response: "роЕро░рпБроорпИ! роЗродрпБ рооро┐роХро╡рпБроорпН роЪрпБро╡ро╛ро░ро╕рпНропрооро╛рой роХрпЗро│рпНро╡ро┐! ЁЯМЮ роЪро┐роирпНродро┐рокрпНрокрпЛроорпН... роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродро╛ро╡родрпБ роЪрпВро░ро┐роп роТро│ро┐ропро┐ройрпН роиро┐ро▒роорпН роОрокрпНрокроЯро┐ роЗро░рпБроХрпНроХрпБроорпН роОройрпНро▒рпБ рокро╛ро░рпНродрпНродро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛? рокрпНро░ро┐ро╕роорпН ро╡ро┤ро┐ропро╛роХ роЪрпЖро▓рпНро▓рпБроорпН роТро│ро┐ропрпИ рокро╛ро░рпНродрпНродро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?"
    }
  },
  math_fractions: {
    hi: {
      question: "1/2 + 1/4 рдХреИрд╕реЗ рдЬреЛрдбрд╝реЗрдВ?",
      response: "рдЕрдЪреНрдЫрд╛ рд╕рд╡рд╛рд▓! ЁЯНХ рдЪрд▓рд┐рдП рдЗрд╕реЗ рдкрд┐рдЬрд╝реНрдЬрд╝рд╛ рд╕реЗ рд╕рдордЭрддреЗ рд╣реИрдВред рдЕрдЧрд░ рдЖрдкрдХреЗ рдкрд╛рд╕ рдЖрдзрд╛ рдкрд┐рдЬрд╝реНрдЬрд╝рд╛ рд╣реИ рдФрд░ рдЖрдкрдХрд╛ рджреЛрд╕реНрдд рдЖрдкрдХреЛ рдЪреМрдерд╛рдИ рдкрд┐рдЬрд╝реНрдЬрд╝рд╛ рдФрд░ рджреЗрддрд╛ рд╣реИ, рддреЛ рд╕реЛрдЪрд┐рдП - рдХреНрдпрд╛ рд╣рдо рдЗрдиреНрд╣реЗрдВ рд╕реАрдзреЗ рдЬреЛрдбрд╝ рд╕рдХрддреЗ рд╣реИрдВ? рдпрд╛ рдкрд╣рд▓реЗ рдХреБрдЫ рдФрд░ рдХрд░рдирд╛ рд╣реЛрдЧрд╛?"
    },
    bn: {
      question: "1/2 + 1/4 ржХрж┐ржнрж╛ржмрзЗ ржпрзЛржЧ ржХрж░ржм?",
      response: "ржнрж╛рж▓ ржкрзНрж░рж╢рзНржи! ЁЯНХ ржЪрж▓рзБржи ржПржЯрж┐ ржкрж┐рзОржЬрж╛ ржжрж┐ржпрж╝рзЗ ржмрзБржЭрж┐ред ржпржжрж┐ ржЖржкржирж╛рж░ ржХрж╛ржЫрзЗ ржЕрж░рзНржзрзЗржХ ржкрж┐рзОржЬрж╛ ржерж╛ржХрзЗ ржПржмржВ ржЖржкржирж╛рж░ ржмржирзНржзрзБ ржЖржкржирж╛ржХрзЗ ржЖрж░ржУ ржПржХ-ржЪрждрзБрж░рзНржерж╛ржВрж╢ ржкрж┐рзОржЬрж╛ ржжрзЗржпрж╝, рждрж╛рж╣рж▓рзЗ ржнрж╛ржмрзБржи - ржЖржорж░рж╛ ржХрж┐ ржПржЧрзБрж▓рж┐ рж╕рж░рж╛рж╕рж░рж┐ ржпрзЛржЧ ржХрж░рждрзЗ ржкрж╛рж░рж┐? ржирж╛ржХрж┐ ржкрзНрж░ржержорзЗ ржХрж┐ржЫрзБ ржХрж░рждрзЗ рж╣ржмрзЗ?"
    }
  }
};

/**
 * Generates a culturally relevant example based on language and topic
 */
export function getCulturalExample(language: IndianLanguageCode, topic: string): string {
  // This would be expanded with a rich database of cultural examples
  const examples: Record<string, Record<IndianLanguageCode, string>> = {
    'measurement': {
      hi: 'рдЬреИрд╕реЗ рд╣рдо рдЪрд╛рдп рдореЗрдВ рдЪреАрдиреА рдЪрдореНрдордЪ рд╕реЗ рдирд╛рдкрддреЗ рд╣реИрдВ',
      ta: 'родрпЗроирпАро░ро┐ро▓рпН роЪро░рпНроХрпНроХро░рпИропрпИ ро╕рпНрокрпВройро╛ро▓рпН роЕро│рокрпНрокродрпБ рокрпЛро▓',
      bn: 'ржпрзЗржоржи ржЖржорж░рж╛ ржЪрж╛ржпрж╝рзЗ ржЪрж┐ржирж┐ ржЪрж╛ржоржЪ ржжрж┐ржпрж╝рзЗ ржорж╛ржкрж┐',
      en: 'Like measuring sugar in tea with spoons'
    },
    'speed': {
      hi: 'рдЬреИрд╕реЗ рдХреНрд░рд┐рдХреЗрдЯ рдореЗрдВ рдЧреЗрдВрдж рдХреА рд░рдлрд╝реНрддрд╛рд░',
      ta: 'роХро┐ро░ро┐роХрпНроХрпЖроЯрпНроЯро┐ро▓рпН рокроирпНродро┐ройрпН ро╡рпЗроХроорпН рокрпЛро▓',
      bn: 'ржХрзНрж░рж┐ржХрзЗржЯрзЗ ржмрж▓рзЗрж░ ржЧрждрж┐рж░ ржорждрзЛ',
      en: 'Like the speed of a cricket ball'
    }
  };
  
  return examples[topic]?.[language] || examples[topic]?.['en'] || '';
}